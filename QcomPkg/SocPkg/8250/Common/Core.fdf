#/** @file Core.fdf
# FLASH layout file for SM8250Pkg.
#
# Copyright (c) 2015 - 2019 Qualcomm Technologies, Inc. All rights reserved.
# Portions Copyright (c) 2006 - 2010, Intel Corporation.
# This program and the accompanying materials
# are licensed and made available under the terms and conditions of the BSD License
# which accompanies this distribution.  The full text of the license may be found at
# http://opensource.org/licenses/bsd-license.php
#
# THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
# WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#**/

################################################################################
#
# FD Section
# The [FD] Section is made up of the definition statements and a
# description of what goes into  the Flash Device Image.  Each FD section
# defines one flash "device" image.  A flash device image may be one of
# the following: Removable media bootable image (like a boot floppy
# image,) an Option ROM image (that would be "flashed" into an add-in
# card,) a System "Flash"  image (that would be burned into a system's
# flash) or an Update ("Capsule") image that will be used to update and
# existing system flash.
#
################################################################################


[FD.SM8250_EFI]
BaseAddress   = 0x9FC00000|gEmbeddedTokenSpaceGuid.PcdEmbeddedFdBaseAddress  #The base address of the FLASH Device.
Size          = 0x00264000|gEmbeddedTokenSpaceGuid.PcdEmbeddedFdSize         #The size in bytes of the FLASH Device
ErasePolarity = 1
BlockSize     = 0x1000
NumBlocks     = 0x264

################################################################################
#
# Following are lists of FD Region layout which correspond to the locations of different
# images within the flash device.
#
# Regions must be defined in ascending order and may not overlap.
#
# A Layout Region start with a eight digit hex offset (leading "0x" required) followed by
# the pipe "|" character, followed by the size of the region, also in hex with the leading
# "0x" characters. Like:
# Offset|Size
# PcdOffsetCName|PcdSizeCName
# RegionType <FV, DATA, or FILE>
#
################################################################################

# 512 bytes of configuration header & 8 bytes of image header
0x00000000|0x00264000
gEmbeddedTokenSpaceGuid.PcdFlashFvMainBase|gEmbeddedTokenSpaceGuid.PcdFlashFvMainSize
FV = FVMAIN_COMPACT


################################################################################
#     Aux FV's to generate in the build, but not included in any FV
################################################################################


################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################

[FV.FvMain]
BlockSize          = 0x1000
NumBlocks          = 0         # This FV gets compressed so make it just big enough
FvAlignment        = 8         # FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = 631008B0-B2D1-410A-8B49-2C5C4D8ECC7E

!include Apriori.fdf.inc

  INF MdeModulePkg/Core/Dxe/DxeMain.inf

  #
  # PI DXE Drivers producing Architectural Protocols (EFI Services)
  #
  INF ArmPkg/Drivers/CpuDxe/CpuDxe.inf

  INF MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf

  #
  # Security Dxe
  #
  #INF QcomPkg/Drivers/SecurityDxe/SecurityDxe.inf
  INF MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf

  #
  # SecRSA Dxe
  #
  INF QcomPkg/Drivers/SecRSADxe/SecRSADxe.inf

  #
  # ASN1X509 Dxe
  #
  INF QcomPkg/Drivers/ASN1X509Dxe/ASN1X509Dxe.inf

  #
  # VerifiedBoot Dxe
  #
  INF QcomPkg/Drivers/VerifiedBootDxe/VerifiedBootDxe.inf
  #INF QcomPkg/Drivers/VerifiedBootNullDxe/VerifiedBootNullDxe.inf

  #
  # Scm LA Dxe
  #
  INF QcomPkg/Drivers/TzDxe/ScmDxeLA.inf

  #
  # PIL Loader
  #
  INF QcomPkg/Drivers/TzDxe/TzDxeLA.inf

  #INF QcomPkg/Drivers/MdtpDxe/MdtpDxe.inf
  INF MdeModulePkg/Universal/WatchdogTimerDxe/WatchdogTimer.inf
  INF MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf

  # Report Status Code Router & Handler
  INF MdeModulePkg/Universal/ReportStatusCodeRouter/RuntimeDxe/RscRtDxe.inf
  INF MdeModulePkg/Universal/StatusCodeHandler/RuntimeDxe/SCHandlerRtDxe.inf

  #
  # Variable Dxe
  #
  #PRESIL
  #INF MdeModulePkg/Universal/Variable/EmuRuntimeDxe/EmuVariableRuntimeDxe.inf
  INF QcomPkg/Drivers/VariableDxe/VariableDxe.inf

  INF QcomPkg/Drivers/EmbeddedMonotonicCounter/EmbeddedMonotonicCounter.inf
  INF QcomPkg/Drivers/SimpleTextInOutSerialDxe/SimpleTextInOutSerial.inf

  INF QcomPkg/Drivers/ResetRuntimeDxe/ResetRuntimeDxe.inf

  INF EmbeddedPkg/RealTimeClockRuntimeDxe/RealTimeClockRuntimeDxe.inf
  INF EmbeddedPkg/MetronomeDxe/MetronomeDxe.inf
  INF MdeModulePkg/Universal/PrintDxe/PrintDxe.inf
  INF MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf

  INF MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
  INF MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
  INF MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  INF MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf
  INF QcomPkg/Drivers/FontDxe/FontDxe.inf

  INF QcomPkg/Drivers/EnvDxe/EnvDxe.inf

  #
  # wdog driver
  #
  INF QcomPkg/Drivers/QcomWDogDxe/QcomWDogDxe.inf

  #
  # SoC Drivers
  #
  INF ArmPkg/Drivers/ArmGic/ArmGicDxe.inf
  INF ArmPkg/Drivers/TimerDxe/TimerDxe.inf
  INF QcomPkg/Drivers/ChipInfoDxe/ChipInfoDxe.inf

  #
  # GLink Driver
  #
  #INF QcomPkg/Drivers/GLinkDxe/GLinkDxe.inf

  #
  # SMEM Driver
  #
  INF QcomPkg/Drivers/SmemDxe/SmemDxe.inf

  #
  # ULog Driver
  #
  INF QcomPkg/Drivers/ULogDxe/ULogDxe.inf

  #
  # NPA Driver
  #
  INF QcomPkg/Drivers/NpaDxe/NpaDxe.inf

  #
  # CmdDb Driver
  #
  INF QcomPkg/Drivers/CmdDbDxe/CmdDbDxe.inf

  #
  # PwrUtils Driver
  #
  INF QcomPkg/Drivers/PwrUtilsDxe/PwrUtilsDxe.inf

  #
  # RPMH Driver
  #
  INF QcomPkg/Drivers/RpmhDxe/RpmhDxe.inf

  # CPR Driver
  #
  #
  INF QcomPkg/Drivers/CPRDxe/CPRDxe.inf

  #
  # Pdc Driver
  #
  INF QcomPkg/Drivers/PdcDxe/PdcDxe.inf

  #
  # FAT filesystem + GPT/MBR partitioning
  #
  #INF QcomPkg/Drivers/DiskIoDxe/DiskIoDxe.inf
  INF MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf

  #INF QcomPkg/Drivers/PartitionDxe/PartitionDxe.inf
  INF MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf

  INF FatPkg/EnhancedFatDxe/Fat.inf
  INF MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
  INF MdeModulePkg/Universal/FvSimpleFileSystemDxe/FvSimpleFileSystemDxe.inf

  #
  # DAL Drivers
  #
  INF QcomPkg/Drivers/DALSYSDxe/DALSYSDxe.inf

  #
  # Clock DXE driver
  #
  INF QcomPkg/Drivers/ClockDxe/ClockDxe.inf

  #
  # VCS DXE driver
  #
  INF QcomPkg/Drivers/VcsDxe/VcsDxe.inf

  #
  # HAL IOMMU DXE driver
  #
  INF QcomPkg/Drivers/HALIOMMUDxe/HALIOMMUDxe.inf

  #
  # HWIO DXE driver
  #
  INF QcomPkg/Drivers/HWIODxe/HWIODxe.inf

  #
  # GPI Driver
  #
  INF QcomPkg/Drivers/GpiDxe/GpiDxe.inf

  #
  # I2C Driver
  #
  INF QcomPkg/Drivers/I2CDxe/I2CDxe.inf

  #
  # SPI Driver
  #
  INF QcomPkg/Drivers/SPIDxe/SPIDxe.inf

  #
  # SPMI Driver
  #
  INF QcomPkg/Drivers/SPMIDxe/SPMIDxe.inf

  #
  # MMC/SD
  #
  #INF QcomPkg/Drivers/SdccDxe/SdccDxe_SDBoot.inf
  INF QcomPkg/Drivers/SdccDxe/SdccDxe.inf

  #
  # UFS
  #
  INF QcomPkg/Drivers/UFSDxe/UFSDxe.inf

  #
  # TLMM
  #
  INF QcomPkg/Drivers/TLMMDxe/TLMMDxe.inf

  #
  # FeatureEnablerDxe driver
  #
  INF QcomPkg/Drivers/FeatureEnablerDxe/FeatureEnablerDxe.inf

  #
  # Display/MDP DXE driver
  #
  INF QcomPkg/Drivers/DisplayDxe/DisplayDxe.inf

  #
  # PlatformInfo Driver
  #

  INF QcomPkg/Drivers/PlatformInfoDxe/PlatformInfoDxe.inf

  #
  # Button Driver
  #
  INF QcomPkg/Drivers/ButtonsDxe/ButtonsDxe.inf

  #
  # PMIC Driver
  #
  INF QcomPkg/Drivers/PmicDxe/PmicDxeLa.inf
  #INF QcomPkg/Drivers/PmicDxe/NullLib/PmicDxeNull.inf

  #
  # Charger extended Driver
  #
  #PRESIL
  #INF QcomPkg/Drivers/ChargerExDxe/NullLib/ChargerExDxeNull.inf
  INF QcomPkg/Drivers/ChargerExDxe/ChargerExDxe.inf

  #
  # Charger Driver
  #
  INF QcomPkg/Drivers/QcomChargerDxe/QcomChargerDxeLA.inf

  #
  # Usb Power Control Driver
  #
  INF QcomPkg/Drivers/UsbPwrCtrlDxe/UsbPwrCtrlDxe.inf

  #
  # ADC Driver
  #
  INF QcomPkg/Drivers/AdcDxe/AdcDxe.inf

  #
  # TSENS Driver
  #
  INF QcomPkg/Drivers/TsensDxe/TsensDxe.inf

  #
  # Limits Driver
  #
  INF QcomPkg/Drivers/LimitsDxe/LimitsDxe.inf

  #
  # MpPower Driver
  #
  #INF QcomPkg/Drivers/MpPowerDxe/MpPowerDxe.inf

  #
  #DDR Get Config
  #
  INF QcomPkg/Drivers/DDRInfoDxe/DDRInfoDxe.inf
  #
  # USB Support
  #
  INF QcomPkg/Drivers/UsbfnDwc3Dxe/UsbfnDwc3Dxe.inf
  INF QcomPkg/Drivers/XhciPciEmulationDxe/XhciPciEmulationDxe.inf
  INF QcomPkg/Drivers/XhciDxe/XhciDxe.inf
  INF QcomPkg/Drivers/UsbBusDxe/UsbBusDxe.inf
  INF QcomPkg/Drivers/UsbKbDxe/UsbKbDxe.inf
  INF QcomPkg/Drivers/UsbMassStorageDxe/UsbMassStorageDxe.inf
  INF QcomPkg/Drivers/UsbMsdDxe/UsbMsdDxe.inf
  INF QcomPkg/Drivers/UsbDeviceDxe/UsbDeviceDxe.inf
  INF QcomPkg/Drivers/UsbConfigDxe/UsbConfigDxe.inf
  INF QcomPkg/Drivers/UsbInitDxe/UsbInitDxe.inf

  #
  # Hash Driver
  #
  INF QcomPkg/Drivers/HashDxe/HashDxe.inf

  #
  # Cipher Driver
  #
  INF QcomPkg/Drivers/CipherDxe/CipherDxe.inf

  #
  # Mac Driver
  #
  INF QcomPkg/Drivers/MacDxe/MacDxe.inf

  #
  # RNG Driver
  #
  INF QcomPkg/Drivers/RNGDxe/RngDxe.inf

  #
  # BDS
  #
  INF QcomPkg/Drivers/QcomBds/QcomBds.inf

  #
  # QDSS Driver (Debugtrace)
  #
  #INF QcomPkg/Drivers/QdssDxe/QdssDxe.inf

  #
  # PIL Driver
  #
  INF QcomPkg/Drivers/PILDxe/PILDxe.inf

  #
  # PIL Proxy Driver
  #
  INF QcomPkg/Drivers/PILProxyDxe/PILProxyDxe.inf
  
  #
  # QCOM SPSS Driver
  #
  INF QcomPkg/Drivers/SPSSDxe/SPSSDxe.inf

  #
  # Applications
  #
  #QCOM Charger app
  INF QcomPkg/Application/QcomChargerApp/QcomChargerApp.inf

  # ShmBridgeDxe Driver
  INF QcomPkg/Drivers/ShmBridgeDxe/ShmBridgeDxeLA.inf

  FILE FREEFORM = a91d838e-a5fa-4138-825d-455e2303079e {
    SECTION UI = "BDS_Menu.cfg"
    SECTION RAW = QcomPkg/Library/PlatformBdsLib/LA/bds_menu.cfg
  }

  FILE FREEFORM = a91d838e-a5fa-4138-825d-455e23030794 {
    SECTION UI = "logo1.bmp"
    SECTION RAW = QcomPkg/Logo/Common/logo1.bmp
  }

  #
  # Display panel configuration xml
  #
  FILE FREEFORM = 8cae2c55-fc5a-410b-812b-8ca22f572f36 {
    SECTION UI = "Panel_truly_wqxga_dsc_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_wqxga_dsc_cmd.xml
  }

  FILE FREEFORM = 13ac9dc9-0092-4374-ae1a-06ff35950fd0 {
    SECTION UI = "Panel_truly_wqxga_dsc_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_wqxga_dsc_vid.xml
  }

  FILE FREEFORM = fc6315f9-f8fe-4222-a1e3-226df55d7592 {
    SECTION UI = "Panel_truly_wqxga_dual_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_wqxga_dual_cmd.xml
  }

  FILE FREEFORM = 95e7b040-26a2-4511-9abb-1d95d6da7082 {
    SECTION UI = "Panel_truly_wqxga_dual_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_wqxga_dual_vid.xml
  }

  FILE FREEFORM = 8bc595b7-391a-4a9a-8256-5b9983b30392 {
    SECTION UI = "Panel_sharp_4k_dsc_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_sharp_4k_dsc_cmd.xml
  }

  FILE FREEFORM = 19b58acd-b1f8-4078-b9a5-a33584b680e2 {
    SECTION UI = "Panel_sharp_4k_dsc_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_sharp_4k_dsc_vid.xml
  }

  FILE FREEFORM = 0ae323d6-2ebe-11e8-8349-9ba636a0d80c {
    SECTION UI = "Panel_sharp_1080p_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_sharp_1080p_cmd.xml
  }

  FILE FREEFORM = 87273b42-311d-11e8-9324-dfb2dadfc3d1 {
    SECTION UI = "Panel_truly_1080p_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_1080p_cmd.xml
  }

  FILE FREEFORM = bafd3200-311d-11e8-8651-0fb3cacf38fb {
    SECTION UI = "Panel_truly_1080p_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_truly_1080p_vid.xml
  }

  FILE FREEFORM = 88ca5abf-d0ac-4093-a68c-0cfae1ef9635 {
    SECTION UI = "Panel_boe_amoled_wqhd_dsc_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_boe_amoled_wqhd_dsc_cmd.xml
  }

  FILE FREEFORM = 6523a5c9-91cb-45c0-a2dc-25997cf23369 {
    SECTION UI = "Panel_boe_amoled_wqhd_dsc_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_boe_amoled_wqhd_dsc_vid.xml
  }

  FILE FREEFORM = d7170685-5965-4b44-9305-37cdb199b9be {
    SECTION UI = "Panel_boe_amoled_fhd_dsc_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_boe_amoled_fhd_dsc_cmd.xml
  }

  FILE FREEFORM = 2bca3b86-e175-4609-ac7f-207908b89c75 {
    SECTION UI = "Panel_primary_sharp_1080p_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_primary_sharp_1080p_cmd.xml
  }

  FILE FREEFORM = 6343a5e1-e477-452a-b62c-1560c4cbd9f5 {
    SECTION UI = "Panel_secondary_truly_1080p_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_secondary_truly_1080p_cmd.xml
  }

  FILE FREEFORM = 151c5d22-957f-4861-a605-e27154bbda25 {
    SECTION UI = "Panel_secondary_truly_1080p_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_secondary_truly_1080p_vid.xml
  }

  FILE FREEFORM = 8f276ee4-e75e-4c3b-8bcc-c37771e26478 {
    SECTION UI = "Panel_nt36860_wqhd_dsc_cmd.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_nt36860_wqhd_dsc_cmd.xml
  }

  FILE FREEFORM = 6f2d4884-d8a0-11e9-af7a-d77b1fe990ec {
    SECTION UI = "Panel_nt36860_wqhd_dsc_vid.xml"
    SECTION RAW = QcomPkg/Settings/Panel/Panel_nt36860_wqhd_dsc_vid.xml
  }
  # End - Display panel configuration xml

  #
  # CFG files needed in PRODMODE builds
  #
  FILE FREEFORM = A1E235DE-E825-4591-9623-C43175811826 {
    SECTION UI = "SecParti.cfg"
    SECTION RAW = QcomPkg/SocPkg/8250/Common/SecParti.cfg
  }

  #
  # CFG needed for UEFI PIL
  #
  FILE FREEFORM = 21E9BDD9-6C3F-4F10-84A5-BBEC322741F1 {
    SECTION UI = "uefipil.cfg"
    SECTION RAW = QcomPkg/SocPkg/8250/Common/uefipil.cfg
  }

  FILE FREEFORM = 45FE4B7C-150C-45da-A021-4BEB2048EC6F {
    SECTION UI = "QcomChargerCfg.cfg"
    SECTION RAW = QcomPkg/SocPkg/8250/Settings/Charger/QcomChargerConfig_VbattTh.cfg
  }

  FILE FREEFORM = F780C779-DD7C-47CD-BD1A-5EB414C51704 {
    SECTION UI = "BATTERY.PROVISION"
    SECTION RAW = QcomPkg/Drivers/QcomChargerDxe/BATTERY.PROVISION
  }

!include QcomPkg/SocPkg/8250/Common/ImageFv.fdf.inc

[FV.FVMAIN_COMPACT]
FvAlignment        = 8
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

  INF QcomPkg/XBLCore/XBLCore.inf

  FILE FREEFORM = DDE58710-41CD-4306-DBFB-3FA90BB1D2DD {
    SECTION UI = "uefiplat.cfg"
    SECTION RAW = QcomPkg/SocPkg/8250/Common/uefiplat.cfg
  }

#
# Zlib provides faster decompmression time, but has penalty of larger image size
# Lzma: EE4E5898-3914-4259-9D6E-DC7BD79403CF
# Zlib: 1D301FE9-BE79-4353-91C2-D23BC959AE0C
#
  FILE FV_IMAGE = 9E21FD93-9C72-4c15-8C4B-E77F1DB2D792 {
    SECTION GUIDED 1D301FE9-BE79-4353-91C2-D23BC959AE0C PROCESSING_REQUIRED = TRUE {
      SECTION FV_IMAGE = FVMAIN
    }
  }

################################################################################
#
# Rules are use with the [FV] section's module INF type to define
# how an FFS file is created for a given INF file. The following Rule are the default
# rules for the different module type. User can add the customized rules to define the
# content of the FFS file.
#
################################################################################


############################################################################
# Example of a DXE_DRIVER FFS file with a Checksum encapsulation section   #
############################################################################
#
#[Rule.Common.DXE_DRIVER]
#  FILE DRIVER = $(NAMED_GUID) {
#    DXE_DEPEX    DXE_DEPEX Optional      |.depex
#    COMPRESS PI_STD {
#      GUIDED {
#        PE32     PE32                    |.efi
#        UI       STRING="$(MODULE_NAME)" Optional
#        VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
#      }
#    }
#  }
#
############################################################################

[Rule.Common.SEC]
  FILE SEC = $(NAMED_GUID) RELOCS_RETAINED {
    TE  TE    Align = Auto      |.efi
  }

[Rule.Common.PEI_CORE]
  FILE PEI_CORE = $(NAMED_GUID) {
    TE     TE           |.efi
    UI     STRING ="$(MODULE_NAME)" Optional
  }

[Rule.Common.PEIM]
  FILE PEIM = $(NAMED_GUID) {
     PEI_DEPEX PEI_DEPEX Optional        |.depex
     PE32      PE32                      |.efi
     UI       STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.PEIM.TIANOCOMPRESSED]
  FILE PEIM = $(NAMED_GUID) DEBUG_MYTOOLS_IA32 {
    PEI_DEPEX PEI_DEPEX Optional         |.depex
    GUIDED A31280AD-481E-41B6-95E8-127F4C984779 PROCESSING_REQUIRED = TRUE {
      PE32      PE32                     |.efi
      UI        STRING="$(MODULE_NAME)" Optional
    }
  }

[Rule.Common.DXE_CORE]
  FILE DXE_CORE = $(NAMED_GUID) {
    PE32     PE32           |.efi
    UI       STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.UEFI_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.DXE_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.DXE_RUNTIME_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.DXE_RUNTIME_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.UEFI_APPLICATION]
  FILE APPLICATION = $(NAMED_GUID) {
    UI     STRING ="$(MODULE_NAME)" Optional
    PE32   PE32                    |.efi
  }

[Rule.Common.DXE_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

[Rule.Common.UEFI_APPLICATION.BINARY]
  FILE APPLICATION = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    PE32         PE32                    |.efi
    UI           STRING="$(MODULE_NAME)" Optional
  }

